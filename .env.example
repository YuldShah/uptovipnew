# ================================================================
# YTDLBot Configuration - Private Use Edition
# ================================================================
# This bot has been modernized for private use with access control.
# Payment systems and VIP features have been removed.

# ================================================================
# REQUIRED: Telegram Bot Configuration
# ================================================================

# Get these from https://my.telegram.org/apps
# 1. Log in with your phone number
# 2. Click "API Development tools"
# 3. Create a new application
APP_ID=12345678
APP_HASH=your_api_hash_here

# Get this from @BotFather on Telegram
# 1. Message @BotFather
# 2. Send /newbot
# 3. Follow instructions to create your bot
# 4. Copy the token (format: 123456789:ABCdefGHIjklMNOpqrSTUvwxyz)
BOT_TOKEN=123456789:ABCdefGHIjklMNOpqrSTUvwxyz

# ================================================================
# USER TYPES - Only Two Types of Users
# ================================================================

# ADMIN USER IDS (comma-separated)
# These users have full control over the bot:
# - Can use /admin command
# - Can add/remove required channels  
# - Can whitelist/ban users
# - Have unlimited access to bot features
# Get user IDs from @userinfobot
ADMIN_IDS=123456789,987654321

# REGULAR USERS
# All other users are regular users who:
# - Must meet channel membership requirements (if any set)
# - Can be manually whitelisted by admins
# - Can be banned by admins
# - Subject to access control rules

# Enable access control system (True/False)
# When True: Users need channel membership or manual whitelist
# When False: All users have access (not recommended)
ACCESS_CONTROL_ENABLED=True

# ================================================================
# DATABASE CONFIGURATION
# ================================================================

# PostgreSQL database connection
# Format: postgresql+psycopg2://username:password@host:port/database
# For Docker: postgresql+psycopg2://ytdlbot:ytdlbot@postgres/ytdlbot
# For local: postgresql+psycopg2://username:password@localhost:5432/ytdlbot
DB_DSN=postgresql+psycopg2://ytdlbot:ytdlbot@postgres/ytdlbot

# Redis for caching (optional, uses fakeredis if empty)
# For Docker: redis
# For local Redis: localhost:6379
REDIS_HOST=redis

# ================================================================
# DOWNLOAD & PROCESSING OPTIONS
# ================================================================

# Number of concurrent workers (default: 100)
WORKERS=100

# Enable FFMPEG for video processing (True/False)
# Requires ffmpeg installed on system
ENABLE_FFMPEG=False

# Default audio format (mp3, wav, m4a, etc.)
# Leave empty to use m4a (recommended)
AUDIO_FORMAT=

# Enable m3u8 streaming link support (True/False)
M3U8_SUPPORT=False

# Enable Aria2 downloader (True/False)
# Requires aria2c installed on system
ENABLE_ARIA2=False

# Path to Rclone executable (optional)
# Used for cloud storage uploads
RCLONE_PATH=

# ================================================================
# YOUTUBE-SPECIFIC SETTINGS
# ================================================================

# PO Token for YouTube (helps with rate limiting)
# Get from: https://github.com/yt-dlp/yt-dlp/wiki/PO-Token-Guide
# Leave as default or follow guide for your own token
POTOKEN=

# Browser for YouTube cookies/session
# Options: firefox, chrome, safari, edge
BROWSERS=firefox

# ================================================================
# FILE & UPLOAD LIMITS
# ================================================================

# Temporary files directory (optional)
# Must be writable by the bot process
# Leave empty to use system default
TMPFILE_PATH=

# Maximum Telegram upload size in MB
# Telegram limit is 2000MB for bots
TG_NORMAL_MAX_SIZE=2000

# Maximum URL length in captions
CAPTION_URL_LENGTH_LIMIT=150

# ================================================================
# LEGACY/UNUSED SETTINGS (kept for compatibility)
# ================================================================

# Rate limit for requests (legacy)
RATE_LIMIT=120
